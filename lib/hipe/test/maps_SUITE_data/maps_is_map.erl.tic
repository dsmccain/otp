maps_is_map:module_info/0() ->
%% Info:['Not a closure','Leaf function']
40:
    goto 1
1:
    goto 38
38:
    erlang:get_module_info/1(maps_is_map)
%% Data:
maps_is_map:module_info/1(v1 (any())) ->
%% Info:['Not a closure','Leaf function']
44:
    goto 1
1:
    goto 42
42:
    erlang:get_module_info/2(maps_is_map, v1 (any()))
%% Data:
maps_is_map:test/0() ->
%% Info:['Not a closure','Not a leaf function']
18:
    goto 1
1:
    _ := redtest() (primop)
    goto 4
4:
    v2 (boolean()) := test_is_map/1(#{})
    if is_{atom,true}(v2 (boolean())) then 3 (0.50) else 16
3:
    v4 (boolean()) := test_is_map/1(<<"hej">>)
    if is_{atom,false}(v4 (boolean())) then 5 (0.50) else 14
5:
    v6 (boolean()) := test_is_map_guard/1(#{a => b})
    if is_{atom,true}(v6 (boolean())) then 7 (0.50) else 12
7:
    v8 (boolean()) := test_is_map_guard/1(3)
    if is_{atom,false}(v8 (boolean())) then 9 (0.50) else 10
9:
    v10 (boolean()) := test_is_map_with_binary_guard/1(#{"a" => <<"b">>})
    if is_{atom,true}(v10 (boolean())) then 11 (0.50) else 8
11:
    v12 (boolean()) := test_is_map_with_binary_guard/1(12)
    if is_{atom,false}(v12 (boolean())) then 13 (0.50) else 6
13:
    v13 ('ok') := ok
    return(v13 ('ok'))
6:
    v15 ({'badmatch','true'}) := mktuple(badmatch, v12 ('true')) (primop)
    fail(error, [v15 ({'badmatch','true'})])
8:
    v17 ({'badmatch','false'}) := mktuple(badmatch, v10 ('false')) (primop)
    fail(error, [v17 ({'badmatch','false'})])
10:
    v19 ({'badmatch','true'}) := mktuple(badmatch, v8 ('true')) (primop)
    fail(error, [v19 ({'badmatch','true'})])
12:
    v21 ({'badmatch','false'}) := mktuple(badmatch, v6 ('false')) (primop)
    fail(error, [v21 ({'badmatch','false'})])
14:
    v23 ({'badmatch','true'}) := mktuple(badmatch, v4 ('true')) (primop)
    fail(error, [v23 ({'badmatch','true'})])
16:
    v25 ({'badmatch','false'}) := mktuple(badmatch, v2 ('false')) (primop)
    fail(error, [v25 ({'badmatch','false'})])
%% Data:
maps_is_map:test_is_map/1(v1 (any())) ->
%% Info:['Not a closure','Leaf function']
22:
    goto 1
1:
    goto 20
20:
    v2 (boolean()) := erlang:is_map/1(v1 (any()))
    return(v2 (boolean()))
%% Data:
maps_is_map:test_is_map_guard/1(v1 (any())) ->
%% Info:['Not a closure','Leaf function']
28:
    goto 1
1:
    goto 24
24:
    if is_map(v1 (any())) then 3 (0.50) else 26
3:
    v2 ('true') := true
    return(v2 ('true'))
26:
    v3 ('false') := false
    return(v3 ('false'))
%% Data:
maps_is_map:test_is_map_with_binary_guard/1(v1 (any())) ->
%% Info:['Not a closure','Leaf function']
36:
    goto 1
1:
    goto 30
30:
    if is_binary(v1 (any())) then 3 (0.50) else 32
3:
    v2 ('false') := false
    return(v2 ('false'))
32:
    if is_map(v1 (any())) then 5 (0.50) else 34
5:
    v3 ('true') := true
    return(v3 ('true'))
34:
    v4 ('false') := false
    return(v4 ('false'))
%% Data:
